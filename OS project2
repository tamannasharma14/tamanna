#include <bits/stdc++.h>
using namespace std;

struct Student
{
    int pid, bt, at, ct, tat, wt, btt;

    Student(int p, int b, int a)
    {
        pid = p;
        bt = b;
        at = a;
        btt = b;
    }
};

vector<Student> ar;
int n;
void LRTF(); 
Process priority(Process lp, Process rp);
void display();
int main(int argc, const char **argv)
{
    cout << "Enter the number of Students ";
    cin >> n;
    cout << "Pid \t at \t bt\t";
    for (int i = 0; i < n; i++)
    {

        int pid;
        int at;
        int bt;
        cin >> pid >> at >> bt;
        Student this_student(pid, bt, at);
        ar.push_back(this_student);
    }
    LRTF();
    display();
    return 0;
}
bool count()
{
    int k = 0;
    for (Student s : ar)
    {
        if (s.bt > 0)
        {
            k += 1;
        }
    }
    return k;
}
void LRTF()
{
    vector<Student> processqueue;
    int counter = 0, ct = 0, m = 0;
    do
    {
        if (processqueue.size() < n)
        {
            for (int j = 0; j < n; j++)
            {
                if (ar[j].at == counter && ar[j].bt > 0)
                {
                    readyqueue.push_back(ar[j]);
                }
            }
        }
 }       
